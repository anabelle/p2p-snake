:root {
  --background-color: #1a1a1a; /* Very dark grey */
  --text-color: #e0e0e0; /* Light grey */
  --primary-color: #64ffda; /* Bright teal/aqua */
  --card-bg-color: #2a2a2a; /* Slightly lighter dark grey */
  --border-color: #444444; /* Medium grey */
  --highlight-bg-color: #3a3a3a; /* Highlight background for rows/etc. */
  --status-online-color: #81c784; /* Soft green */
  --status-offline-color: #bdbdbd; /* Medium grey */

  --font-title: 'Press Start 2P', cursive;
  --font-body:
    -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',
    'Helvetica Neue', sans-serif;

  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
}

body {
  margin: 0;
  font-family: var(--font-body);
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
}

#root {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: var(--spacing-md);
}

.game-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-lg);
  width: 100%;
  max-width: 1200px; /* Adjust max-width as needed */
}

/* --- Title --- */
h1 {
  font-family: var(--font-title);
  font-size: 1.75rem; /* Slightly larger than before */
  color: var(--primary-color);
  margin-bottom: var(--spacing-sm);
  text-align: center;
  display: block; /* Ensure default */
}

/* --- Game Area --- */
#game-canvas-container {
  position: relative; /* For positioning the player count badge */
  border: 1px solid var(--border-color);
  background-color: #000; /* Ensure canvas container bg is distinct if needed */
  /* width and height will be set inline based on grid - these need overriding on mobile */
  /* Ensure container shrinks if needed */
  max-width: 100%;
}

/* --- Responsive Canvas --- */
@media (max-width: 767px) {
  #game-canvas-container {
    /* Override potential inline width with 100% of parent */
    width: 100% !important;
    /* Let height adjust based on aspect ratio */
    height: auto !important;
    /* Maintain aspect ratio based on GRID_SIZE (50/30) */
    aspect-ratio: 50 / 30;
  }

  #game-canvas-container canvas {
    /* Ensure canvas fills the scaled container */
    display: block; /* Remove extra space below canvas */
    width: 100%;
    height: 100%;
    /* Override inline canvas dimensions */
    max-width: 100%;
    max-height: 100%;
  }
}

.connecting-overlay {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(42, 42, 42, 0.8); /* Use card bg with some transparency */
  border-radius: 8px;
  font-size: 1.2rem;
  color: var(--text-color);
  position: absolute; /* Cover the canvas area */
  top: 0;
  left: 0;
  z-index: 10;
}

.player-count-badge {
  position: absolute;
  top: var(--spacing-sm);
  left: var(--spacing-sm);
  background-color: rgba(0, 0, 0, 0.6);
  color: var(--text-color);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: 4px;
  font-size: 0.9rem;
  font-weight: bold;
  z-index: 5; /* Above canvas, below connecting overlay */
}

/* --- Info Sections --- */
.info-sections-wrapper {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive columns */
  gap: var(--spacing-lg);
  width: 100%;
  /* max-width: calc(var(--canvas-width, 600px) + 2px); Align with canvas width + borders - Moved to media query */
}

@media (min-width: 768px) {
  .info-sections-wrapper {
    max-width: calc(var(--canvas-width, 600px) + 2px);
  }
}

.info-section {
  background-color: var(--card-bg-color);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: var(--spacing-md);
  color: var(--text-color);
  overflow: hidden; /* Prevents content spill */
}

.info-section h3 {
  font-family: var(--font-body);
  font-size: 1.2rem;
  color: var(--primary-color);
  margin-top: 0;
  margin-bottom: var(--spacing-md);
  border-bottom: 1px solid var(--border-color);
  padding-bottom: var(--spacing-sm);
}

/* Specific Info Section elements */
#your-snake-info > div:not(#active-powerups) {
  display: flex;
  flex-wrap: wrap; /* Allow wrapping on small screens */
  align-items: center;
  gap: var(--spacing-sm) var(--spacing-lg); /* Row and column gap */
  margin-bottom: var(--spacing-md);
}

#your-snake-info strong,
#active-powerups strong {
  color: #bbbbbb; /* Slightly lighter grey for emphasis */
}

.player-color-swatch {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 3px;
  vertical-align: middle;
  margin-right: var(--spacing-xs);
}

#active-powerups {
  margin-top: var(--spacing-md);
}

#active-powerups > div {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  margin-left: var(--spacing-sm);
  margin-bottom: var(--spacing-xs);
}

/* --- Player Rankings Table --- */
.table-scroll-wrapper {
  max-height: 250px; /* Limit height and make scrollable */
  overflow-y: auto;
  border: 1px solid var(--border-color);
  border-radius: 4px;
}

table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.9rem;
}

thead {
  background-color: var(--highlight-bg-color);
  position: sticky; /* Keep header visible on scroll */
  top: 0;
  z-index: 1;
}

th,
td {
  padding: var(--spacing-sm);
  text-align: left;
  border-bottom: 1px solid var(--border-color);
}

th {
  color: var(--primary-color);
  font-weight: bold;
}

tbody tr:nth-child(even) {
  background-color: rgba(0, 0, 0, 0.1); /* Subtle striping */
}

tbody tr.highlight-row {
  background-color: var(--highlight-bg-color);
  font-weight: bold;
}

tbody tr:hover {
  background-color: rgba(var(--primary-color-rgb, 100 255 218), 0.1); /* Subtle hover */
}

.status-online {
  color: var(--status-online-color);
  font-weight: bold;
}

.status-offline {
  color: var(--status-offline-color);
  font-style: italic;
}

/* --- Powerup Legend & Symbols --- */
#powerup-legend ul {
  list-style: none;
  padding: 0;
  margin: 0;
  font-size: 0.9rem;
}

#powerup-legend li {
  margin-bottom: var(--spacing-sm);
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.powerup-symbol {
  display: inline-flex; /* Use flex for centering */
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  color: var(--background-color);
  font-weight: bold;
  font-size: 0.8rem;
  border: 1px solid rgba(0, 0, 0, 0.3);
  text-align: center;
  line-height: 22px; /* Adjust for vertical centering */
  flex-shrink: 0; /* Prevent shrinking */
}

.powerup-symbol.speed {
  background-color: #80deea; /* Cyan */
}
.powerup-symbol.slow {
  background-color: #fff59d; /* Yellow */
}
.powerup-symbol.invincibility {
  background-color: #ce93d8; /* Purple */
}
.powerup-symbol.double-score {
  background-color: #ffcc80; /* Orange */
}

/* --- Accessibility --- */
*:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* Basic Modal Styling */
.profile-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.75);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000; /* Ensure it's above other content */
  padding: 15px; /* Add padding to ensure space around modal on small screens */
}

.profile-modal {
  background: var(--background-color); /* Use existing variable */
  padding: 20px 30px;
  border-radius: 8px;
  border: 1px solid var(--border-color); /* Use existing variable */
  color: var(--text-color); /* Use existing variable */
  min-width: 300px;
  max-width: 90%;
  max-height: calc(100vh - 30px); /* Set max height to screen height minus padding */
  overflow-y: auto; /* Enable scrolling */
  outline: none;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  /* Improve accessibility by ensuring proper focus management */
  position: relative; /* For positioning scroll indicators if needed */
}

.profile-modal h2 {
  margin-top: 0;
  color: var(--primary-color); /* Use existing variable */
  text-align: center;
  margin-bottom: 20px;
}

.profile-modal-content {
  margin-bottom: 20px;
}

.profile-modal .form-group {
  margin-bottom: 15px;
}

.profile-modal .form-group label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}

.profile-modal .form-group input[type='text'] {
  width: 100%;
  padding: 8px 10px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--input-bg-color, #2a2a2e); /* Adjusted default for dark theme */
  color: var(--input-text-color, #e1e1e1); /* Adjusted default for dark theme */
  box-sizing: border-box; /* Include padding in width */
}

/* Style the react-color CirclePicker container */
.profile-modal .circle-picker {
  margin: 10px 0;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  max-height: 220px;
  overflow-y: auto;
  padding: 5px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
}

/* Improve CirclePicker accessibility */
.profile-modal .circle-picker > span {
  margin: 4px !important;
}

.profile-modal .circle-picker > span > div {
  cursor: pointer;
  transition: transform 0.2s ease;
}

.profile-modal .circle-picker > span > div:hover {
  transform: scale(1.15);
}

.profile-modal .circle-picker > span > div:focus {
  outline: 2px solid var(--primary-color) !important;
  box-shadow: 0 0 0 2px var(--primary-color) !important;
}

/* Remove all old SketchPicker styles */
/* .profile-modal .sketch-picker {
  box-shadow: none !important; 
  padding: 0 !important; 
  background: transparent !important; 
  border-radius: 4px;
  width: 100% !important; 
  transform: scale(0.85); 
  transform-origin: top left;
  margin-bottom: 10px; 
}

.profile-modal .sketch-picker > div {
  margin-bottom: 4px !important;
  padding-bottom: 4px !important;
}

.profile-modal .sketch-picker > div:first-child {
  height: 120px !important; 
}

.profile-modal .sketch-picker > div:not(:first-child) {
  padding: 4px !important;
}

.profile-modal .sketch-picker > div:last-child {
  padding-top: 0 !important;
  margin-top: 0 !important;
}

.profile-modal .sketch-picker input {
  background-color: var(--input-bg-color, #3a3a3e) !important;
  color: var(--input-text-color, #e1e1e1) !important;
  box-shadow: inset 0 0 0 1px var(--border-color, #555) !important; 
  border: none !important;
}
.profile-modal .sketch-picker > div:last-child > div:first-child > div:first-child {
}
.profile-modal .sketch-picker label {
    color: var(--text-color-secondary, #aaa) !important; 
} */

.profile-modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  margin-top: 15px; /* Add some space above buttons */
  position: sticky; /* Make buttons sticky at bottom for better access */
  bottom: 0;
  background: var(--background-color); /* Match modal background */
  padding: 10px 0; /* Add padding */
  z-index: 5; /* Ensure buttons appear above scrollable content */
}

/* Basic Button Styling (adapt to your existing button styles) */
.profile-modal-actions button {
  padding: 8px 15px;
  border-radius: 4px;
  border: none;
  cursor: pointer;
  font-weight: bold;
  transition: opacity 0.2s ease;
  min-height: 44px; /* Improve touch target size for accessibility */
  min-width: 44px; /* Ensure minimum touch target size */
}

.button-primary {
  background-color: var(--primary-color); /* Use existing variable */
  color: white;
}
.button-primary:hover {
  opacity: 0.9;
}

.button-secondary {
  background-color: var(--secondary-button-bg, #555); /* Adjusted default for dark theme */
  color: var(--secondary-button-text, #e1e1e1); /* Adjusted default for dark theme */
}
.button-secondary:hover {
  opacity: 0.9;
}

/* Make profile items clickable */
.editable-profile-item {
  cursor: pointer;
  /* display: inline-block; /* Let's use block for better layout */
  display: block; /* Makes the whole row clickable */
  padding: 4px 8px; /* Add some padding */
  margin: 2px 0; /* Add vertical margin */
  border-radius: 4px;
  transition: background-color 0.2s ease;
}

.editable-profile-item:hover {
  background-color: rgba(255, 255, 255, 0.1); /* Subtle hover effect */
}

/* Ensure swatch within clickable area also has pointer */
.editable-profile-item .player-color-swatch {
  cursor: pointer;
  /* Add vertical-align if needed depending on surrounding text */
  vertical-align: middle;
}

/* Game Area Wrapper */
.game-area-wrapper {
  position: relative; /* Ensure default has relative positioning for the button */
  display: inline-block; /* Or block, match original intent */
}

/* Fullscreen Button Styling */
.fullscreen-button {
  position: absolute;
  top: 5px;
  right: 5px;
  padding: 5px 10px;
  background-color: rgba(0, 0, 0, 0.6);
  color: white;
  border: 1px solid #ccc;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.8em;
  z-index: 10; /* Ensure it's above the canvas */
}

.fullscreen-button:hover {
  background-color: rgba(0, 0, 0, 0.8);
}

.fullscreen-button:focus {
  outline: 2px solid dodgerblue; /* Accessibility */
  outline-offset: 2px;
}

/* App-fullscreen: Use flex to center content */
.App-fullscreen {
  background-color: #000;
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  padding: 0; /* Remove padding to maximize space */
  box-sizing: border-box;
}

/* Re-add rules for hiding elements */
.App-fullscreen h1,
.App-fullscreen [data-testid='info-panel-wrapper'],
.App-fullscreen .profile-modal-overlay, /* Ensure modal hidden too */
.App-fullscreen footer {
  display: none;
}

/* Ensure the wrapper fills the centered space */
.App-fullscreen .game-area-wrapper {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: 100%;
  max-height: 100%;
}

/* Style the canvas container to fill the wrapper */
.App-fullscreen > .game-area-wrapper > #game-canvas-container {
  width: 100%;
  height: 100%;
  border: none;
  display: flex; /* Keep flex to center canvas if needed, though canvas fills it now */
  justify-content: center;
  align-items: center;
  /* Remove aspect-ratio and other constraints */
  aspect-ratio: unset;
  max-width: none;
}

/* Make the canvas element's *box* fill its container */
.App-fullscreen > .game-area-wrapper > #game-canvas-container canvas {
  display: block;
  width: 100%;
  height: 100%;
  /* Remove object-fit: contain; size is controlled by attributes now */
}

/* Footer default */
footer {
  /* ... existing footer styles ... */
  display: block; /* Ensure default */
}

/* Ensure the game canvas container maintains aspect ratio if needed */
/* This might require more complex logic depending on desired behavior */
/* .App-fullscreen #game-canvas-container { */
/* Example: */
/* max-width: 100vw; */
/* max-height: 100vh; */
/* object-fit: contain; */
/* } */

/* Note: True browser fullscreen styling might require ::backdrop pseudo-element */
/* or targeting the :fullscreen pseudo-class on the element itself */

/* Default display styles */
h1 {
  display: block;
}

/* Use data-testid for InfoPanel wrapper */
[data-testid='info-panel-wrapper'] {
  display: block; /* Or grid, depending on its actual default */
}

footer {
  display: block;
}
